.data
.align 2
pad1: .space 80
arr: .space 12
pad2: .space 80

.text
main:
addiu $sp, $sp, -12
sw $ra, 8($sp)
la $v0, arr
sw $v0, 0($sp)
li $v0, 0
sw $v0, 4($sp)
li $v0, 1
lw $t0, 4($sp)
subu $v0, $t0, $v0
bltzal $v0, .L2
sll $v0, $v0, 2
lw $t0, 0($sp)
addu $v0, $t0, $v0
lw $v0, 0($v0)
add $a0, $v0, $0
jal output
.L1:
lw $ra, 8($sp)
addiu $sp, $sp, 12
jr $ra
.L2:
j __crt_out_of_bounds


.text
.globl __crt_out_of_bounds
.globl output
.globl input

__crt_out_of_bounds:
li $v0, 10 # exit
syscall

output:
li $v0, 1  # print_int
syscall
li $a0, 0x0a
li $v0, 11 # print_char
syscall
jr $ra

input:
li $v0, 5 # read_int
syscall
jr $ra

